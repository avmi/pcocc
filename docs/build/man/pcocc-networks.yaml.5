.\" Man page generated from reStructuredText.
.
.TH "PCOCC-NETWORKS.YAML" "5" "Oct 10, 2019" "0.6.1" "pcocc"
.SH NAME
pcocc-networks.yaml \- Networks configuration file
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
\fB/etc/pcocc/networks.yaml\fP is a YAML formatted file defining virtual networks available to pcocc VMs. Virtual networks are referenced through VM resource sets defined in the \fB/etc/pcocc/resources.yaml\fP configuration file. For each virtual cluster, private instances of the virtual networks referenced by its VMs are created, which means each virtual network instance is only shared by VMs within a single virtual cluster.
.sp
A network is defined by its name, type and settings, which are specific to each network type. Two types of networks are supported: Ethernet and Infiniband.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Before editing this configuration file on a compute node, you should first make sure that no VMs are running on the node and execute the following command, as root:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
pcocc internal setup cleanup
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH SYNTAX
.sp
\fB/etc/pcocc/networks.yaml\fP contains a key/value mapping. Each key defines a network by its name and the associated value must contain two keys: \fBtype\fP which defines the type of network to define, and \fBsettings\fP which is a key/value mapping defining the parameters for this network.  This is summed up in the example below:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Define a network named \(aqnetwork1\(aq
network1:
    # Select the network type
    type: ethernet
    # Define settings for ethernet networks
    settings:
        setting1: \(aqfoo\(aq
        setting2: \(aqbar\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following networks are supported:
.SH ETHERNET NETWORK
.sp
A virtual Ethernet network is defined by using the network type \fIethernet\fP\&. A VM connected to a network of this type receives an Ethernet interface linked to an isolated virtual switch. All the VMs of a virtual cluster connected to a given network are linked to the same virtual switch. Connectivity is provided by encapsulating Ethernet packets from the VMs in IP tunnels between hypervisors. If the \fBnetwork\-layer\fP parameter is set to \fIL2\fP pcocc only provides Ethernet layer 2 connectivity between the VMs. The network is entirely isolated and no services (such as DHCP) are provided, which means the user is responsible for configuring the VM interfaces as he likes. If the \fBnetwork\-layer\fP is set to \fIL3\fP pcocc also manages IP addressing and optionally provides access to external networks through a gateway which performs NAT (Network Address Translation) using the hypervisor IP as source. Reverse NAT can also be setup to allow connecting to a VM port such as the SSH port from the outside. DHCP and DNS servers are automatically setup on the private network to provide IP addresses for the VMs. The available parameters are:
.INDENT 0.0
.TP
\fBdev\-prefix\fP
Prefix to use when assigning names to virtual devices such as bridges and TAPs created on the host.
.TP
\fBnetwork\-layer\fP
Whether pcocc should provide layer 3 services or only a layer 2 Ethernet network (see above). Can be set to:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIL3\fP (default): Manage IP layer and provide services such as DHCP
.IP \(bu 2
\fIL2\fP: Only provide layer 2 connectivity
.UNINDENT
.UNINDENT
.UNINDENT
.TP
\fBmtu\fP
MTU of the Ethernet network. (defaults to 1500)
.UNINDENT
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Please note that the MTU of the Ethernet interfaces in the VMs has to be set 50 bytes lower than this value to account for the encapsulation headers. The DHCP server on a L3 network automatically provides an appropriate value.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
\fBmac\-prefix\fP
Prefix to use when assigning MAC addresses to virtual Ethernet interfaces. MAC addresses are assigned to each VM in order starting from the MAC address constructed by appending zeros to the prefix. (defaults to 52:54:00)
.TP
\fBhost\-if\-suffix\fP
Suffix to append to hostnames when establishing a remote tunnel if compute nodes have specific hostnames to address each network interface. For example, if a compute node known by SLURM as computeXX can reached more efficiently via IPoIB at the computeXX\-ib address, the \fBhost\-if\-suffix\fP parameter can be set to \fI\-ib\fP so that the Ethernet tunnels between hypervisors transit over IPoIB.
.UNINDENT
.sp
The following parameters only apply for a \fIL3\fP network:
.INDENT 0.0
.TP
\fBint\-network\fP
IP network range in CIDR notation reserved for assigning IP addresses to VM network interfaces via DHCP. This network range should be unused on the host and not be routable. It is private to each virtual cluster and VMs get a fixed IP address depending on their rank in the virtual cluster. (defaults to 10.200.0.0/16)
.TP
\fBext\-network\fP
IP network range in CIDR notation reserved for assigning unique VM IPs on the host network stack. This network range should be unused on the host and not be routable. (defaults to 10.201.0.0/16)
.TP
\fBdns\-server\fP
The IP of a domain name resolver to forward DNS requests. (defaults to reading resolv.conf on the host)
.TP
\fBdomain\-name\fP
The domain name to provide to VMs via DHCP. (defaults to pcocc.<host domain name>)
.TP
\fBdns\-search\fP:
Comma separated DNS search list to provide to VMs via DHCP in addition to the domain name.
.TP
\fBntp\-server\fP
The IP of a NTP server to provide to VMs via DHCP.
.TP
\fBallow\-outbound\fP
Set to \fInone\fP to prevent VMs from establishing outbound connections.
.TP
\fBreverse\-nat\fP
A key/value mapping which can be defined to allow inbound connections to a VM port via reverse NAT of a host port. It contains the following keys:
.INDENT 7.0
.TP
\fBvm\-port\fP
The VM port to make accessible.
.TP
\fBmin\-host\-port\fP
Minimum port to select on the host for reverse NATing.
.TP
\fBmax\-host\-port\fP
Maximum port to select on the host for reverse NATing.
.UNINDENT
.UNINDENT
.sp
The example below defines a managed network with reverse NAT for SSH access:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Define an ethernet network NAT\(aqed to the host network
# with a reverse NAT for the SSH port
nat\-rssh:
  type: ethernet
  settings:
    # Manage layer 3 properties such as VM IP adresses
    network\-layer: "L3"

    # Name prefix used for devices created for this network
    dev\-prefix: "nat"

    # MTU of the network
    mtu: 1500

    reverse\-nat:
      # VM port to expose on the host
      vm\-port: 22
      # Range of free ports on the host to use for reverse NAT
      min\-host\-port: 60222
      max\-host\-port: 60322
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The example below defines a private layer 2 network
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Define a private ethernet network isolated from the host
pv:
  # Private ethernet network isolated from the host
  type: ethernet
  settings:
    # Only manage Ethernet layer
    network\-layer: "L2"

    # Name prefix used for devices created for this network
    dev\-prefix: "pv"

    # MTU of the network
    mtu: 1500
.ft P
.fi
.UNINDENT
.UNINDENT
.SH IB NETWORK
.sp
A virtual Infiniband network is defined by using the type \fIinfiniband\fP\&. An Infiniband partition is allocated for each virtual Infiniband network instantiated by a virtual cluster. VMs connected to Infiniband networks receive direct access to an Infiniband SRIOV virtual function restricted to using the allocated partition as well as the default partition, as limited members, which is required for IPoIB.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
This means that, for proper isolation of the virtual clusters, physical nodes should be set as limited members of the default partition and/or use other partitions for their communications.
.UNINDENT
.UNINDENT
.sp
pcocc makes use of a daemon on the OpenSM node which dynamically updates the partition configuration (which means pcocc has to be installed on the OpenSM node). The daemon generates the configuration from a template holding the static configuration to which it appends the dynamic configuration. Usually, you will want to copy your current configuration to the template file (/etc/opensm/partitions.conf.tpl in the example below) and have pcocc append its dynamic configuration to form the actual partition file referenced in the OpenSM configuration. The following parameters can be defined:
.INDENT 0.0
.TP
\fBhost\-device\fP
Device name of a physical function from which to map virtual functions in the VM.
.TP
\fBmin\-pkey\fP
Minimum pkey value to assign to virtual clusters.
.TP
\fBmax\-pkey\fP
Maximum pkey value to assign to virtual clusters.
.TP
\fBopensm\-daemon\fP
Name of the OpenSM process (to signal from the pkeyd daemon).
.TP
\fBopensm\-partition\-cfg\fP
The OpenSM partition configuration file to generate dynamically.
.TP
\fBopensm\-partition\-tpl\fP
The file containing the static partitions to include in the generatied partition configuration file.
.UNINDENT
.sp
The example below sums up the available parameters:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ib:
  # Infiniband network based on SRIOV virtual functions
  type: infiniband
  settings:
    # Host infiniband device
    host\-device: "mlx5_0"
    # Range of PKeys to allocate for virtual clusters
    min\-pkey: "0x2000"
    max\-pkey: "0x3000"
    # Name of opensm process
    opensm\-daemon: "opensm"
    # Configuration file for opensm partitions
    opensm\-partition\-cfg: /etc/opensm/partitions.conf
    # Template for generating the configuration file for opensm partitions
    opensm\-partition\-tpl: /etc/opensm/partitions.conf.tpl
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
As explained above, pcocc must be installed on the OpenSM node(s) and the \fIpkeyd\fP daemon must be running to manage the partition configuration file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
systemctl enable pkeyd
systemctl start pkeyd
.ft P
.fi
.UNINDENT
.UNINDENT
.SH SAMPLE CONFIGURATION FILE
.sp
This is the default configuration file for reference:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Define an ethernet network NAT\(aqed to the host network
# with a reverse NAT for the SSH port
nat\-rssh:
  type: ethernet
  settings:
    # Manage layer 3 properties such as VM IP adresses
    network\-layer: "L3"

    # Private IP range for VM interfaces on this ethernet network.
    int\-network: "10.251.0.0/16"

    # External IP range used to map private VM IPs to unique VM IPs on the
    # host network stack for NAT.
    ext\-network: "10.250.0.0/16"

    # Name prefix used for devices created for this network
    dev\-prefix: "nat"

    # MTU of the network
    mtu: 1500

    reverse\-nat:
      # VM port to expose on the host
      vm\-port: 22
      # Range of free ports on the host to use for reverse NAT
      min\-host\-port: 60222
      max\-host\-port: 60322

    # Suffix to append to remote hostnames when tunneling
    # Ethernet packets
    host\-if\-suffix: ""


# Define a private ethernet network isolated from the host
pv:
  # Private ethernet network isolated from the host
  type: ethernet
  settings:
    # Only manage Ethernet layer
    network\-layer: "L2"

    # Name prefix used for devices created for this network
    dev\-prefix: "pv"

    # MTU of the network
    mtu: 1500

    # Suffix to append to remote hostnames when tunneling
    # Ethernet packets
    host\-if\-suffix: ""


# Define a private Infiniband network
ib:
  # Infiniband network based on SRIOV virtual functions
  type: infiniband
  settings:
    # Host infiniband device
    host\-device: "mlx5_0"
    # Range of PKeys to allocate for virtual clusters
    min\-pkey: "0x2000"
    max\-pkey: "0x3000"
    # Resource manager token to request when allocating this network
    license: "pkey"
    # Name of opensm process
    opensm\-daemon: "opensm"
    # Configuration file for opensm partitions
    opensm\-partition\-cfg: /etc/opensm/partitions.conf
    # Template for generating the configuration file for opensm partitions
    opensm\-partition\-tpl: /etc/opensm/partitions.conf.tpl
.ft P
.fi
.UNINDENT
.UNINDENT
.SH SEE ALSO
.sp
pcocc\-template(1), pcocc\-templates.yaml(5), pcocc\-resources.yaml(5), pcocc\-newvm\-tutorial(7), pcocc\-configvm\-tutorial(7)
.SH AUTHOR
François Diakhaté
.SH COPYRIGHT
2017
.\" Generated by docutils manpage writer.
.
