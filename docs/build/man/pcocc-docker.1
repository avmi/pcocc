.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PCOCC-DOCKER" "1" "Jun 17, 2022" "0.7.0" "pcocc"
.SH NAME
pcocc-docker \- Access a docker daemon
.SH SYNOPSIS
.sp
pcocc docker [COMMAND] [ARG]
.SH DESCRIPTION
.sp
Use a docker daemon running in a VM
.sp
The \fIpcocc docker\fP subcommands allow to provision a remote docker daemon running in a VM managed by pcocc and to use it as if it was running on a local node.
.SS Allocate a Docker VM
.sp
\fIpcocc docker alloc\fP and \fIpcocc docker batch\fP allow to allocate Docker VMs. Their behaviour mirror the \fI\%pcocc\-alloc(1)\fP and \fI\%pcocc\-batch(1)\fP commands. Batch options are transferred to the batch manager so as to select, for example, a partition or a core count for the VM.
.sp
In interactive mode (\fIpcocc docker alloc\fP), an interactive shell is launched where environment variables are defined to tell clients of the Docker API to target the remote virtualized daemon. The \fIdocker\fP CLI or other tools such as \fIdocker\-compose\fP can then be used as if the daemon was running locally. Once the interactive shell exits, the Docker VM is terminated.
.sp
Instead of starting an interactive shell, a script can be executed on the front\-end node using the \fI\-E\fP option. The same environment variables will be set for remote Docker access, and the VM is terminated once the script exits.
.sp
\fIpcocc docker batch\fP provides the same functionnality in batch mode instead of interactive mode.
.sp
\fIpcocc docker shell\fP and \fIpcocc docker env\fP allow to set the environment variables required to communicate with the remote Docker daemon in other shells or tasks.
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B alloc [\-E script] [BATCH OPTIONS]
Allocate a docker Pod and start a docker shell
.TP
.B batch [\-E script] [BATCH OPTIONS]
Allocate a docker VM (but do not start a shell)
.TP
.B shell [\-j JOBID] [\-J jobname] [\-E script] [\-T timeout]
Start a docker shell
.UNINDENT
.sp
env [\-j JOBID] [\-J jobname]
.UNINDENT
.UNINDENT
.SS Container image management
.sp
\fIpcocc docker import\fP imports an image from a pcocc repository to the Docker daemon container storage, while \fIpcocc docker export\fP exports an image from the Docker daemon container storage to a pcocc repository.
.sp
\fIpcocc docker build\fP creates a new image in a pcocc repository from a Dockerfile. The Dockerfile image is first built by the Docker daemon before being transferred to the pcocc repository.
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B import SRC DEST
Import an image from a pcocc repository
.TP
.B export SRC DEST
Export an image to a pcocc repository
.TP
.B build PATH DEST
Build a pcocc image from a Dockerfile
.UNINDENT
.UNINDENT
.UNINDENT
.SH EXAMPLES
.sp
Allocate a Docker VM and start an interactive shell:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
pcocc docker alloc \-c 16
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Build an image from a Dockerfile:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
pcocc docker build . newcontainer
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Import an image from a pcocc repository and run it with Docker:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
pcocc docker import busybox busybox
docker run \-ti \-\-rm busybox
.ft P
.fi
.UNINDENT
.UNINDENT
.SH SEE ALSO
.sp
\fI\%pcocc\-image(1)\fP, \fI\%pcocc\-run(1)\fP
.SH AUTHOR
François Diakhaté
.SH COPYRIGHT
2017
.\" Generated by docutils manpage writer.
.
