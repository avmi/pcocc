.\" Man page generated from reStructuredText.
.
.TH "PCOCC-9PMOUNT-TUTORIAL" "7" "Sep 19, 2018" "0.5.0" "pcocc"
.SH NAME
pcocc-9pmount-tutorial \- How to mount host directories in VMs
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
In this guide we detail how to mount host directories from VMs thank to 9p over virtio.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
CentOS and RHEL guests lack of built\-in support for the 9p filesystem in the kernel. You\(aqll have to compile the 9p modules from the kernel sources before being able to use this guide.
.UNINDENT
.UNINDENT
.SH DEFINING HOST DIRECTORIES TO EXPORT
.sp
First, you have to define host directories to export as mount\-points inside the VM template in templates.yaml\&.
.sp
A mount\-point named \fIoptmount\fP for \fB/opt\fP can be defined as follows:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount\-points:
    optmount:
        path: /opt/
        readonly: true
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The \fBreadonly\fP parameter defaults to \fIfalse\fP and therefore can be omitted for RW mounts
.UNINDENT
.UNINDENT
.sp
In this definition \fIoptmount\fP is the tag of the 9p export which will be exposed to the VM. This tag has to be unique and will be referred to when mounting the export (see next section). \fI/opt/\fP is the host path that is associated to this tag.
.SH MOUNTING EXPORTS IN THE GUEST
.sp
To mount a 9p export in the guest, you can use the following command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount \-t 9p \-o trans=virtio [mount tag] [mount point] \-oversion=9p2000.L,msize=262144
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
With the previous example this gives:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount \-t 9p \-o trans=virtio optmount /opt/ \-oversion=9p2000.L,msize=262144
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The \fB/opt\fP directory from the host should now be mounted on \fB/opt\fP inside the guest. Note that Qemu act as the 9p server and performs the actual I/O on the host filesystem with the permissions of the user launching the virtual cluster.
.sp
To mount the directory automatically at boot time you may put it in your fstab. This can be done with the following cloud\-config snippet (see pcocc\-cloudconfig\-tutorial(7)):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mounts:
  \- [ optmount, /opt, 9p, \(aqtrans=virtio,version=9p2000.L,msize=262144,nofail\(aq, \(aq0\(aq, \(aq0\(aq]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH MIRRORING UIDS
.sp
Since I/O is performed with permissions of the user launching the virtual cluster, the best way to avoid permission issues is to access 9p mounts in your VM with a user having the same uid as your user on the host.
.sp
For example let\(aqs assume your user on the host is user1, you may retrieve it\(aqs numeric id with:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
id user1
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Which would give, for example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
uid=1023(user1) gid=1023(user1) groups=1023(user1)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Therefore, you would need to create a \(aquser1\(aq in your VM with uid 1023. This may be done with the following cloud\-config snippet (see pcocc\-cloudconfig\-tutorial(7)):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
users:
\- name : user1
  uid: 1023
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If applicable, another solution is to configure your VMs to access the same directory sever as your hosts.
.SH MOUNTING YOUR HOME DIRECTORY
.sp
Mounting one\(aqs own home directory is a common use\-case for this feature. It makes it easy to share files and facilitates SSH key deployment. To export your home directory, set the following parameter in the VM template:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mount\-points:
    myhome:
        path: %{env:HOME}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Define the mount point in the VM fstab with a cloud\-config file, for example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mounts:
  \- [ myhome, /home/user1, 9p, \(aqtrans=virtio,version=9p2000.L,msize=262144\(aq, \(aq0\(aq, \(aq0\(aq]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
With a shared home directory, one can simply generate a private SSH key on the host and add the corresponding public key to the host\(aqs \fB~/.ssh/authorized_keys\fP file to enable SSH connexion from host to VMs as well as between VMs.
.SH AUTHOR
François Diakhaté
.SH COPYRIGHT
2017
.\" Generated by docutils manpage writer.
.
