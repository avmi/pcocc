.. _template:

|template_title|
================

Synopsis
********

pcocc template [COMMAND] [ARG]

Description
***********

List and manage virtual machine templates.

Sub-Commands
************

   list
                Display a list of all templates (system-wide and user-defined)

   show [tpl]
                Show a detailed description of the template named *tpl*

   import [-i inherited template] -n "template_name" [source image]
                Import a VM image or inherit from an existing template

   export [-o outputfile.format] template
                Exports a given template to a self-sustained VM image

Templates Import and Export
***************************

The *template* subcommand allows management of existing templates. In particular it provides convenient import and export commands. These commands support the following formats: raw, qcow2, qed, vdi, vpc, vmdk.

template import
###############

**import** can be used to duplicate an existing template (with no image in parameter) or to import an existing VM image inside pcocc while doing the required conversions.

Import supports the following options:

  -n, \-\-name [NAME]
            Name of the template to be created (required)

  -i, \-\-inherit [TPL]
            Template name to inherit the config from (optionnal)

  -h, \-\-prefix [PREFIX]
            Directory where to store the VMs (optionnal defaults to *$HOME/.pcocc*)

  [IMAGE.type]
            VM image to be imported it will be transparently converted to QCOW2

.. note::
    VM image types are detected according to their extension (.raw, .vdi, ...) when no extension is provided, pcocc assumes it is a .qcow2 file.

template export
###############

**export** is to be used to extract the VM image from an existing template. This command will produce a standalone image which can be later re-imported in pcocc or other hypervisors such as VirtualBox.

Export supports the following options:

  -o, \-\-output [NAME.TYPE]
            Name and type of the VM image to be produced (optionnal defaults to *image.qcow2*)

  [TEMPLATE]
            Name of the template to be exported

.. note::
    If the VM is made of several differential snapshots export will gather them in a single file

Examples
********

To list available templates::

    pcocc template list

This produces an output similar to::

    NAME            DESCRIPTION                  RESOURCES    IMAGE
    ----            -----------                  ---------    -----
    mydebian        My custom Debian VM          cluster      /vms/debian9-cloud
    centos7-cloud   Cloud-init enabled CentOS 7  cluster      /vms/centos7-cloud
    debian9-cloud   Cloud-init enabled Debian 9  cluster      /vms/debian9-ci

To get detailed information relative to a template::

    pcocc template show mydebian

It produces an output such as::

    ATTRIBUTE         INHERITED    VALUE
    ---------         ---------    -----
    inherits          No           debian9-ci
    user-data         No           ~/conf
    image             Yes          /vms/debian9-ci
    resource-set      Yes          cluster
    image-revision    No           0 (Sun Jul  9 22:58:41 2017)

To export the *mydebian* template to a VirtualBox compatible image::

    pcocc template export -o image.vdi mydebian

It will produce this output::

    Convert '~/vms/debian9-ci/image'
         to './image.vdi'... OK
    'mydebian' has been exported to './image.vdi'

Similarly, to import an existing image, for example, considering that you modifed the previously exported VirtualBox image and that you want to use it in pcocc again::

    pcocc import -i mydebian -n updateddebian ./image.vdi

This will produce the following output::

    Creating template directory '~/.pcocc//updateddebian'... OK
    Convert '~/image.vdi'
         to '~/.pcocc/updateddebian/image'... OK
    Saved a backup of 'templates.yaml' in '~/.pcocc/templates.yaml.bak'
    Registering new template 'updateddebian'... OK
    Sucessfully imported 'updateddebian' with this configuration:
    
    
    #Autogenerated by 'pcocc import' on 2017-11-28 01:37:17.683988
    updateddebian:
        image: ~/.pcocc//updateddebian
        inherits: mydebian
    #   resource-set: cluster
    #   user-data: ~/my-cloud-file
    #   mount-points:
    #       homes:
    #           path: pathtomy/home
    #           readonly: false

You are now free to further edit this configuration to fit your needs.

See also
********

:ref:`pcocc-templates.yaml(5)<templates.yaml>`, :ref:`pcocc-resources.yaml(5)<resources.yaml>`
